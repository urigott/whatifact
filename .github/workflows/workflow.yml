name: Verify whatifact
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main
      - dev
jobs:
  build:
    name: continuous-integration
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -r requirements.txt

      - name: Install pylint
        run: uv pip install pylint

      - name: Run pylint
        run: pylint --fail-under=7.5 whatifact/          
      
      - name: Activate and run tests
        run: python -m unittest discover tests

  publish:
    name: Publish to TestPyPI
    runs-on: ubuntu-latest
    needs: build # ensure build job completes successfully
    if: github.event_name == 'pull_request'  # Only runs on PRs

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -r requirements.txt

      - name: Install build and twine
        run: uv pip install build twine

      - name: Build package
        run: uv build

      - name: Determine PyPI repository
        id: pypi_target
        run: |
          if [[ "${{ github.base_ref }}" == "main" ]]; then
            echo "repo_url=https://upload.pypi.org/" >> $GITHUB_ENV
            echo "pypi_token=${{ secrets.PYPI_API_TOKEN }}" >> $GITHUB_ENV
            
          elif [[ "${{ github.base_ref }}" == "dev" ]]; then
            echo "repo_url=https://test.pypi.org/" >> $GITHUB_ENV
            echo "pypi_token=${{ secrets.TEST_PYPI_API_TOKEN }}" >> $GITHUB_ENV

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ env.pypi_token }}
          repository_url: ${{ env.repo_url }}