name: Verify whatifact
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - dev
      - main
jobs:
  build:
    name: continuous-integration
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -r requirements.txt

      - name: Install pylint
        run: uv pip install pylint

      - name: Run pylint
        run: pylint --fail-under=7.5 whatifact/          
      
      - name: Activate and run tests
        run: python -m unittest discover tests

  publish-test:
    name: Publish-test
    needs: build # ensure build job completes successfully
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    environment:
      name: pypi-test
      url: https://test.pypi.org/p/${{ github.event.repository.name }}
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -r requirements.txt

      - name: Install build and twine
        run: uv pip install build twine

      - name: Build and publish
        run: |
          uv build      
          python -m twine upload --verbose --repository testpypi dist/*

  publish-pypi:
    name: Publish-to-PyPi
    needs: build # ensure build job completes successfully
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest        
    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -r requirements.txt

      - name: Install build and twine
        run: uv pip install build twine

      - name: Build package
        run: uv build

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository-url: https://upload.pypi.org/legacy/
